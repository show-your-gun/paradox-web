run-name: ${{ inputs.comment }} [${{ github.ref_name }} ref] ${{ inputs.application }} - ${{ inputs.environment }} by @${{ github.actor }}
name: Build, Push, Deploy
on:
  workflow_dispatch:
    inputs:
      application:
        description: 'Application for deploy'
        required: true
        default: paradox-web
        type: choice
        options:
        - paradox-web
      environment:
        type: environment
        required: true
        description: 'environment to deploy, for prod use workflow from tags'
        default: development
      comment:
        description: "comment"
        required: true
        default: "usefull information"
        type: string

defaults:
  run:
    working-directory: ./

env:
  PRODUCTION_NS: production
  DEVELOPMENT_NS: development

jobs:
  choose_enviroment:
    runs-on: 'ubuntu-latest'
    if: ${{ always() && !(contains(needs.*.result, 'failure')) && !cancelled() }}
    outputs:
      production_ns: ${{ steps.chosen_namespace.outputs.production }}
      development_ns: ${{ steps.chosen_namespace.outputs.development }}
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v3
    - 
      name: namespaces
      id: chosen_namespace
      run: |
        echo "production=${PRODUCTION_NS}" >> $GITHUB_OUTPUT
        echo "development=${DEVELOPMENT_NS}" >> $GITHUB_OUTPUT

  check_tags:
    runs-on: 'ubuntu-latest'
    if: ${{ always() && !(contains(needs.*.result, 'failure')) && !cancelled() }}
    needs:
    - choose_enviroment
    outputs:
      status: ${{ join(steps.*.conclusion) }}
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v3
    -
      id: step_development
      name: Development
      if: ${{ inputs.environment == 'development' && github.ref_type != 'tag' }}
      run: |
        echo "Have no tags! Branch [${GITHUB_REF##*/}] would be deployed to development"
        exit 0
    -
      id: step_production
      name: Production
      if: ${{ inputs.environment == 'production' && github.ref_type == 'tag' }}
      run: |
        echo "Tagged version [${{ github.ref_name }}] would be deployed to production"
        exit 0
    - 
      name: Fail
      if: steps.step_development.conclusion == 'skipped' && steps.step_production.conclusion == 'skipped'
      run: |
        echo "Deploy failed! Production includes only tagged versions, development excludes tagged versions!"
        exit 1

  build_and_push:
    runs-on: 'ubuntu-latest'
    if: ${{ always() && !(contains(needs.*.result, 'failure')) && !cancelled() }}
    needs:
    - check_tags
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v3
    - 
      name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_LOGIN }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - 
      name: Get short sha
      uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 7
    - 
      name: Build and push Docker image [Development version]
      if: ${{ inputs.environment == 'development' && github.ref_type != 'tag' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        build-args: |
          "SHA_COMMIT=${{ steps.short-sha.outputs.sha }}"
          "BRANCH_NAME=${GITHUB_REF##*/}"
        push: true
        tags: ${{ secrets.DOCKERHUB_LOGIN }}/paradox-web:${{ steps.short-sha.outputs.sha }}-dev, ${{ secrets.DOCKERHUB_LOGIN }}/paradox-web:latest-dev
    - 
      name: Build and push Docker image [Production version]
      if: ${{ inputs.environment == 'production' && github.ref_type == 'tag' }}
      uses: docker/build-push-action@v2
      with:
        context: .
        build-args: |
          "SHA_COMMIT=${{ steps.short-sha.outputs.sha }}"
          "VERSION_TAG=${{ github.ref_name }}"
        push: true
        tags: ${{ secrets.DOCKERHUB_LOGIN }}/paradox-web:${{ github.ref_name }}, ${{ secrets.DOCKERHUB_LOGIN }}/paradox-web:latest